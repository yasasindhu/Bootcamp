{"version":3,"file":"main.7c4cc9f44e8d1249a730.hot-update.js","sources":["webpack:///./src/components/molecules/searchTab/jobSearch.js"],"sourcesContent":["import { Button, Divider, Grid, makeStyles, ThemeProvider} from \"@material-ui/core\";\nimport { LocationOnOutlined, WorkOutline } from \"@material-ui/icons\";\nimport React from \"react\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport CustomTextFieldForJobSearch from \"../../atoms/TextField/CustomTextFieldForJobSearch\";\nimport CustomTextFieldForJobLocation from '../../atoms/TextField/CustomTextFieldForJobLocation'\nimport customtheme from \"../../theme\";\n\n\n\nconst useTextFieldStyles = makeStyles({\n    underline: {\n        \"&&&:before\": {\n          borderBottom: \"none\"\n        },\n        \"&&:after\": {\n          borderBottom: \"none\"\n        }\n      }\n})\n\nconst useStyles = makeStyles((theme) => ({\n    searchIcon:{\n        // marginTop: '0px',\n        height: '48px',\n        width: '83px',\n        backgroundColor: \"#5ac568\",\n        borderTopRightRadius: \"10px\",\n        borderBottomRightRadius: \"10px\",\n        borderTopLeftRadius : \"0%\",\n        borderBottomLeftRadius: \"0%\",\n        contrastText: \"#fafafa\",\n    },\n    textFieldSearch:{\n        width: \"500px\",\n        paddingTop: '6px',\n    },\n    textFieldLocation:{\n        // width: \"400px\",\n        paddingTop: '6px'\n    },\n    iconClass: {\n        color: '#9bbdcb',\n        width: '24px',\n        height: '24px', \n        paddingTop: '12px',\n        paddingRight: '4px'\n    },\n    gridComponent: {\n        width: '1050px', \n        height: '50px',\n        margin: '15px 59px 30px 60px',\n        padding: '0 0 0 15px',\n        borderRadius: '10px',\n        border: 'solid 1px #e3f3f6',\n        backgroundColor: '#ffffff',\n        margin: {\n            margin: theme.spacing(1),\n        },\n    }\n}))\n\n\nexport function JobSearch({width}){\n    \n    const classes = useStyles();\n    const [valInSearchSkills,setValInSearchSkills] = React.useState('');\n\n    const handleChangeForTextInSearchSkills = (newVal) => {\n\n        setValInSearchSkills(newVal)\n    }\n\n    const handleChange = () => {\n        \n        if(valInSearchSkills===''){\n            alert('Enter the Search Skills')\n        }\n        else{\n            // dispatch(showPage(\"PAGE3\"))\n        }\n    }\n\n   \n    return(\n        <div>\n            <ThemeProvider theme = { customtheme}>\n            <Grid container direction=\"row\" className = { classes.gridComponent } >\n                <Grid item direction=\"column\" style = {{ width: \"530px\"}}>\n                    <WorkOutline className = { classes.iconClass }></WorkOutline>\n                    {/* <TextField  placeholder = \"Search Jobs\" InputProps = {{textFieldSearchStyles}} /> */}\n                    <CustomTextFieldForJobSearch placeholder = \"Search Jobs\" className = \"textFieldSearch\"/>\n                </Grid>\n                <Divider style = {{ marginTop: '5px', marginBottom: '5px', height: '40px'}} orientation=\"vertical\"/>\n                <Grid item direction=\"column\">\n                        <LocationOnOutlined className = { classes.iconClass }></LocationOnOutlined>\n                        {/* <TextField placeholder={<Typography variant = \"subtitle1\">Location</Typography>} className = { classes.textFieldLocation}> */}\n                        <CustomTextFieldForJobLocation placeholder = \"Location\" className = \"textFieldLocation\"/>   \n                    \n                    \n                        {/* </Button> */}\n                    {/* </Button> */}\n                    {/* <Button variant = \"contained\">Search</Button> */}\n                </Grid>\n                <Grid item>\n                        <Button variant = \"contained\"    color = \"primary\" className = { classes.searchIcon} onClick = {(event) => { handleChange() }}>\n                        <SearchIcon/>\n                        </Button>\n                </Grid>\n            </Grid>\n            </ThemeProvider>\n        </div>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AADA;AAWA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AADA;AAnCA;AAAA;AA0CA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAHA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AADA;AADA;AA4BA;AAlDA;;;;;;;;;;;;;;;;;A","sourceRoot":""}